plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // Querydsl 플러그인 추가
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

compileJava{
	options.compilerArgs += '-parameters'
}
tasks.withType(JavaCompile) {
	options.compilerArgs += ["-parameters"]
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.springframework.boot:spring-boot-starter-webflux:'
	testImplementation 'org.springframework.security:spring-security-test'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '3.1.2'
	runtimeOnly 'com.h2database:h2'
//테스트를 위한 assertj import
	testImplementation("org.assertj:assertj-core:3.22.0")
// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '33.1.0-jre'
//메일 서비스를 위해 추가
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.2.4'
//    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	// json 데이터 처리용
	implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.3.1'
	implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'

	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'

	//queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 에러 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 에러 대응 코드
	runtimeOnly 'com.mysql:mysql-connector-j'
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.5'
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.5'
}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated')
}

////querydsl 추가 시작
//def querydslDir = "$buildDir/generated/querydsl"
//querydsl {
//    jpa = true
//    querydslSourcesDir = querydslDir
//}
//sourceSets {
//    main.java.srcDir querydslDir
//}
//configurations {
//    querydsl.extendsFrom compileClasspath
//}
//compileQuerydsl {
//    options.annotationProcessorPath = configurations.querydsl
//}